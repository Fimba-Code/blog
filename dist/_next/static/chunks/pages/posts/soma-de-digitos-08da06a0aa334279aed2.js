_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[15],{PZu3:function(a,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/posts/soma-de-digitos",function(){return t("qnt6")}])},qnt6:function(a,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return l}));var n=t("wx14"),o=t("Ff2n"),c=t("q1tI"),r=t.n(c),s=t("7ljp"),p=t("+ego"),m=(r.a.createElement,{}),i=Object(p.a)({slug:"soma-de-digitos",date:new Date("2020-05-25T00:00:00.000Z"),title:"Algoritmo: Soma de d\xedgitos",tags:["algoritmo","python","beginner"],author:"stenio",__resourcePath:"Users/faustino/Documents/ownPros/fimba-blog/src/pages/posts/soma-de-digitos.mdx",__scans:{},layout:"index"});function l(a){var e=a.components,t=Object(o.a)(a,["components"]);return Object(s.a)(i,Object(n.a)({},m,t,{components:e,mdxType:"MDXLayout"}),Object(s.a)("p",null,"A soma de d\xedgitos (digit sum) de um n\xfamero natural \xe9 igual a soma de todos os d\xedgitos que comp\xf5em este n\xfamero. "),Object(s.a)("h2",null,"Descri\xe7\xe3o do problema"),Object(s.a)("p",null,"Dado um n\xfamero inteiro, o programa deve retornar a soma de todos os digitos deste n\xfamero. "),Object(s.a)("pre",null,Object(s.a)("code",Object(n.a)({parentName:"pre"},{}),"Input: 1024\nOutput: 7\n")),Object(s.a)("p",null,"O programa deve ser capaz de lidar com n\xfameros inteiros negativos."),Object(s.a)("pre",null,Object(s.a)("code",Object(n.a)({parentName:"pre"},{}),"Input: -352\nOutput: 10\n")),Object(s.a)("p",null,"O programa deve tamb\xe9m lidar com input inv\xe1lido tais como n\xfameros decimais e caracteres."),Object(s.a)("pre",null,Object(s.a)("code",Object(n.a)({parentName:"pre"},{}),"Input: let me break your code\nOuput: Input inv\xe1lido\n\n")),Object(s.a)("h2",null,"Solu\xe7\xf5es poss\xedveis"),Object(s.a)("p",null,Object(s.a)("strong",{parentName:"p"},"Resto da divis\xe3o por 10")),Object(s.a)("ol",null,Object(s.a)("li",{parentName:"ol"},"Obter o resto da divis\xe3o do n\xfamero por 10;"),Object(s.a)("li",{parentName:"ol"},"Somar o resto da divis\xe3o com a soma actual (resultado);"),Object(s.a)("li",{parentName:"ol"},"Dividir o n\xfamero por 10 e repetir os passos 1,2 e 3 enquanto o n\xfamero for diferente de 0.")),Object(s.a)("p",null,Object(s.a)("strong",{parentName:"p"},"Convers\xe3o para string")),Object(s.a)("ol",null,Object(s.a)("li",{parentName:"ol"},"Converter o n\xfamero inteiro para uma string. "),Object(s.a)("li",{parentName:"ol"},"Percorrer a string caracter por caracter e para cada caracter:",Object(s.a)("ol",{parentName:"li"},Object(s.a)("li",{parentName:"ol"},"Converter o caracter para inteiro;"),Object(s.a)("li",{parentName:"ol"},"Somar o inteiro com a soma actual (resultado).")))),Object(s.a)("h2",null,"Descri\xe7\xe3o da solu\xe7\xe3o"),Object(s.a)("p",null,"Para resolvermos este problema, aplicaremos a solu\xe7\xe3o que envolve a convers\xe3o do n\xfamero inteiro para uma string. Uma descri\xe7\xe3o detalhada da solu\xe7\xe3o \xe9 apresentada em pseudoc\xf3digo abaixo:"),Object(s.a)("pre",null,Object(s.a)("code",Object(n.a)({parentName:"pre"},{}),'var\nnumero : caracter\nsoma,digito : int\ninicio\n1.  escreva("input: ")\n2.  leia(numero)\n3.  se e_inteiro(numero) entao\n4.    soma <- 0\n5.    numero <- numpcarac(abs(caracpnum(numero)))\n6.    para j de 1 ate compr(numero) faca    \n7.      digito <- caracpnum(copia(numero,j,1))\n8.      soma <- soma + digito\n9.    fimpara\n10.   escreva("ouput: " + soma)\n11. senao\n12.   escreva("Input inv\xe1lido")  \n13. fimse\n14. fimalgoritmo\n')),Object(s.a)("p",null,"O primeiro passo \xe9 ler o input do usu\xe1rio:"),Object(s.a)("pre",null,Object(s.a)("code",Object(n.a)({parentName:"pre"},{}),"2.   leia(numero)\n")),Object(s.a)("p",null,"Este input \xe9 armazenado numa vari\xe1vel do tipo car\xe1cter para facilitar as manipula\xe7\xf5es mais tarde no c\xf3digo."),Object(s.a)("p",null,"A linha a seguir executa uma rotina que verifica se o input pode ser convertido para um n\xfamero inteiro:"),Object(s.a)("pre",null,Object(s.a)("code",Object(n.a)({parentName:"pre"},{}),"3.  se e_inteiro(numero) entao \n")),Object(s.a)("p",null,"Esta linha lida com inputs inv\xe1lidos e garante que s\xf3 inteiros sejam processados."),Object(s.a)("p",null,"Nas linhas a seguir n\xf3s temos:"),Object(s.a)("pre",null,Object(s.a)("code",Object(n.a)({parentName:"pre"},{}),"4.    soma <- 0\n5.    numero <- numpcarac(abs(caracpnum(numero)))\n")),Object(s.a)("p",null,"A linha 5 converte o numero para inteiro, obt\xe9m o valor absoluto deste inteiro e volta a converter este inteiro para uma string. Esta sequ\xeancia \xe9 usada para lidar com os casos \xe9 que o input \xe9 um n\xfamero negativo."),Object(s.a)("p",null,"Nas 4 linhas a seguir temos:"),Object(s.a)("pre",null,Object(s.a)("code",Object(n.a)({parentName:"pre"},{}),"6.    para j de 1 ate compr(numero) faca    \n7.      digito <- caracpnum(copia(numero,j,1))\n8.      soma <- soma + digito\n9.    fimpara\n")),Object(s.a)("p",null,"O trecho acima realiza toda executa toda l\xf3gica necess\xe1ria para:"),Object(s.a)("ol",null,Object(s.a)("li",{parentName:"ol"},"Percorrer toda string caracter por caracter;"),Object(s.a)("li",{parentName:"ol"},"Converter cada caracter para inteiro;"),Object(s.a)("li",{parentName:"ol"},"Actualizar a soma dos d\xedgitos com o d\xedgito mais recente.")),Object(s.a)("h2",null,"Aplica\xe7\xe3o da solu\xe7\xe3o"),Object(s.a)("p",null,"A implementa\xe7\xe3o concreta da solu\xe7\xe3o descrita na sec\xe7\xe3o anterior(em Python):"),Object(s.a)("pre",{className:"language-python"},Object(s.a)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"num ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"input"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"input: "'),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"try"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"\n    ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"num",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"except")," ValueError",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"\n    ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"print"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token string"}),'"Introduza um n\xfamero inteiro"'),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    exit",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\nnum ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"str"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"abs"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"num",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\nresult ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token number"}),"0"),"\n",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"for")," digit ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"in")," num",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),":"),"\n    result ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token operator"}),"+=")," ",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token builtin"}),"int"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),"digit",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n",Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token keyword"}),"print"),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token string-interpolation"}),Object(s.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'f"output: '),Object(s.a)("span",Object(n.a)({parentName:"span"},{className:"token interpolation"}),Object(s.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"{"),"result",Object(s.a)("span",Object(n.a)({parentName:"span"},{className:"token punctuation"}),"}")),Object(s.a)("span",Object(n.a)({parentName:"span"},{className:"token string"}),'"')),Object(s.a)("span",Object(n.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n")))}l.isMDXComponent=!0}},[["PZu3",0,2,1,3,4,5]]]);