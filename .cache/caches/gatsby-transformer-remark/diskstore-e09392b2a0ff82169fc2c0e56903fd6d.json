{"expireTime":9007200844641545000,"key":"transformer-remark-markdown-html-ecefe60a67126f04c0c719deaa45086f-gatsby-remark-highlight-code-","val":"<p><b>Fluxograma</b> é um tipo de diagrama que representa o esquema(fluxo) de um processo ou algoritmo. Muito usados em ciências da computação, fluxogramas permitem-nos descrever processos computacionais.</p>\n<p>Para a criação de fluxogramas, existem algumas regras à serem respeitadas, regras estas são:</p>\n<ul>\n<li>Marcar o <b>começo</b> e o <b>fim</b> do processo.</li>\n<li>Escreva <b>estados</b> e <b>instruções</b> dentro de retângulos.</li>\n<li>Escreva processos <b>decisões</b> dentro de losangos.</li>\n<li>Conecte elementos sequênciais com flechas.</li>\n</ul>\n<h3>Fluxogramas na prática</h3>\n<p>Para exemplificar, usaremos um famoso algoritmo(jogo) chamado <b>Fizz Buzz</b>. A ideia por trás deste jogo é a seguinte:</p>\n<p>Nos é dado um certo número, caso seja um múltiplo de 15 e resto da divisão for 0, imprimmos <b>FizzBuzz</b>, caso seja um múltiplo de 3 e o resto da divisão for 0, imprimimos <b>Fizz</b>, caso seja um múltiplo de 5 o resto da divisão for 0, imprimimos <b>Buzz</b>.</p>\n<div align=\"center\">\n    <img \n        src=\"./assets/fluxograma-fizzbuzz.png\" \n        width=\"500\" \n        height=\"350\" \n    />\n</div>\n<h3>Pseudocódigo</h3>\n<p>Assim como os fluxogramas, pseudocódigos permitem-nos expressar processos computacionais.</p>\n<p>Pseudocódigos não são interpretados por nenhum computador, o seu uso é restrito para nós humanos.</p>\n<p>No exemplo acima, vimos como é feita a implementação do algoritmo <b>FizzBuzz</b> usando um fluxograma, no exemplo à seguir, veremos como é implementação do mesmo usando pseudocódigo.</p>\n\n        <deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">função fizzBuzz(número) {\n  se número módulo 15 resto 0\n  \timprima &quot;FizzBuzz&quot;\n  senão se número módulo 3 resto 0\n  \timprima &quot;Fizz&quot;\n  senão se número módulo 5 resto 0\n  \timprima &quot;Buzz&quot;\n  senão\n  \tretorne\n}</code>\n        </deckgo-highlight-code>\n      \n<p>Voilà, o uso destes dois métodos, permitem-nos criar softwares com processos explícitos e poucos bugs.</p>"}